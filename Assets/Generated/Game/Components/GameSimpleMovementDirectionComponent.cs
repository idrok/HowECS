//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SimpleMovement.DirectionComponent simpleMovementDirection { get { return (SimpleMovement.DirectionComponent)GetComponent(GameComponentsLookup.SimpleMovementDirection); } }
    public bool hasSimpleMovementDirection { get { return HasComponent(GameComponentsLookup.SimpleMovementDirection); } }

    public void AddSimpleMovementDirection(float newValue) {
        var index = GameComponentsLookup.SimpleMovementDirection;
        var component = (SimpleMovement.DirectionComponent)CreateComponent(index, typeof(SimpleMovement.DirectionComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSimpleMovementDirection(float newValue) {
        var index = GameComponentsLookup.SimpleMovementDirection;
        var component = (SimpleMovement.DirectionComponent)CreateComponent(index, typeof(SimpleMovement.DirectionComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSimpleMovementDirection() {
        RemoveComponent(GameComponentsLookup.SimpleMovementDirection);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSimpleMovementDirection;

    public static Entitas.IMatcher<GameEntity> SimpleMovementDirection {
        get {
            if (_matcherSimpleMovementDirection == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SimpleMovementDirection);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSimpleMovementDirection = matcher;
            }

            return _matcherSimpleMovementDirection;
        }
    }
}
